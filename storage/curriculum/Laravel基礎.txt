Laravel基礎フレームワーク

## Laravelとは

LaravelはPHPのWebアプリケーションフレームワークです。
MVC（Model-View-Controller）パターンを採用しています。

## ルーティング

routes/web.phpでルートを定義します。

```php
<?php
use Illuminate\Support\Facades\Route;

// 基本的なルート
Route::get('/', function () {
    return view('welcome');
});

// パラメータを受け取るルート
Route::get('/user/{id}', function ($id) {
    return 'User ID: ' . $id;
});

// コントローラーを使ったルート
Route::get('/posts', [PostController::class, 'index']);
Route::post('/posts', [PostController::class, 'store']);
?>
```

## コントローラー

app/Http/Controllers/ディレクトリにコントローラーを作成します。

```php
<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;

class PostController extends Controller
{
    public function index()
    {
        $posts = Post::all();
        return view('posts.index', compact('posts'));
    }

    public function store(Request $request)
    {
        $request->validate([
            'title' => 'required|max:255',
            'content' => 'required',
        ]);

        Post::create([
            'title' => $request->title,
            'content' => $request->content,
        ]);

        return redirect('/posts');
    }
}
?>
```

## モデル

app/Models/ディレクトリにモデルを作成します。

```php
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Post extends Model
{
    protected $fillable = ['title', 'content'];

    // リレーション例
    public function user()
    {
        return $this->belongsTo(User::class);
    }
}
?>
```

## ビュー（Blade）

resources/views/ディレクトリにBladeテンプレートを作成します。

```php
<!-- resources/views/posts/index.blade.php -->
@extends('layouts.app')

@section('content')
<div class="container">
    <h1>投稿一覧</h1>
    
    @foreach($posts as $post)
    <div class="post">
        <h2>{{ $post->title }}</h2>
        <p>{{ $post->content }}</p>
        <small>{{ $post->created_at }}</small>
    </div>
    @endforeach
</div>
@endsection
```

## マイグレーション

database/migrations/ディレクトリにマイグレーションファイルを作成します。

```php
<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreatePostsTable extends Migration
{
    public function up()
    {
        Schema::create('posts', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->text('content');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('posts');
    }
}
?>
```

## バリデーション

```php
<?php
// コントローラー内でのバリデーション
$request->validate([
    'name' => 'required|string|max:255',
    'email' => 'required|email|unique:users',
    'age' => 'required|integer|min:18|max:100',
    'password' => 'required|string|min:8|confirmed',
]);

// フォームリクエストを使用したバリデーション
class StorePostRequest extends FormRequest
{
    public function rules()
    {
        return [
            'title' => 'required|max:255',
            'content' => 'required',
        ];
    }
}
?>
```

## Eloquent ORM

```php
<?php
// データの取得
$posts = Post::all();
$post = Post::find(1);
$posts = Post::where('published', true)->get();

// データの作成
$post = new Post();
$post->title = 'タイトル';
$post->content = '内容';
$post->save();

// または
Post::create([
    'title' => 'タイトル',
    'content' => '内容',
]);

// データの更新
$post = Post::find(1);
$post->title = '新しいタイトル';
$post->save();

// データの削除
$post = Post::find(1);
$post->delete();
?>
```